name: Master Branch

on:
  push:
    branches: [main]
#  pull_request:
#    branches: [ main ]

env:
  IMAGE_NAME: action-demo
  
jobs:
  test:
    name: Test - Units & Integrations
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Maven Package
        run: mvn -B clean package -DskipTests
      - name: Maven Verify
        run: mvn -B clean verify -Pintegration-test
  artifact:
    name: Publish - GitHub Packages
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Publish artifact on GitHub Packages
        run: mvn -B clean deploy -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  docker:
    name: Publish - Docker Hub
    runs-on: ubuntu-latest
    needs: [test]
    env:
      REPO: ${{ secrets.DOCKER_REPO }}

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.22.0
        id: bump_version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
      - name: Build image
        run: docker build . --file Dockerfile --tag image

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
            IMAGE_ID=docker.pkg.github.com/${{ github.repository }}
            # Change all uppercase to lowercase
            IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
            echo IMAGE_ID=$IMAGE_ID

            NEW_TAG=${{ steps.bump_version.outputs.new_tag }}
            NEW_TAG=$(echo $NEW_TAG | sed -e 's/^v//')
            echo NEW_TAG=$NEW_TAG

            docker tag image $IMAGE_ID:$NEW_TAG
            docker tag image $IMAGE_ID:latest

            docker push $IMAGE_ID:$NEW_TAG
            docker push $IMAGE_ID:latest
